{"mappings":"AAAA,MAAM,CAAC,OAAO,CAAC,CAAA,gJAA0E;AACnB,yGAAmB;CACrE,QAAR,CAAC,KAAK,CAAC,CAAA,oFAAwC;CACX,QAApC,CAAC,MAAM,CAAC,CAAA,yGAAuD;CACrB,QAA1C,CAAC,OAAO,CAAC,CAAA,uGAA2C;;AACJ,MAAtD,CAAC,QAAQ,CAAC,CACZ,IAAI,CAAC,QAAQ,CAAC,CACd,QAAQ,CAAC,MAAM,CAAC,CAChB,GAAG,EAAE,CACL,QAAQ,CAAC,OAAO,CAAC;AAGrB,MAAM,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC;AACzB,sGAA4D;AAClB,8BAA5B;AACd,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE;AAClB,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE","sources":["src/main.js"],"sourcesContent":["jQuery('.test')//因为jQuery不返回元素们，返回的是一个api对象;用jQuery找到test，用返回得到的对象通过addClass方法添加className\n//下面的return this的作用就是 api->addClass('red')->api->addClass('blue')->api->addClass('green')\n   .addClass('red')//这个api里有addClass,作用是遍历所有刚才获取的元素，添加.red。\n   .addClass('blue')//因为addClass执行完返回了api，所以api.addClass()就等于api————这叫做链式操作\n   .addClass('green')//函数如果用一个对象来调用的话，这个函数里的this就是对象，所以this就是api\njQuery('.test1')\n   .find('.child')\n   .addClass('blue')\n   .end()\n   .addClass('green')\n\n\nconst x = jQuery('.test')\n//x是可以操作所有child的api，所以x可以使用each；(div)=>console.log(div)是一个函数\n//这个函数会被each调用\nx.parent().print()\nx.children().print()"],"names":[],"version":3,"file":"index.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}